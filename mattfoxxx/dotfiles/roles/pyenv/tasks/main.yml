---
# tasks file for pyenv

- name: Include os specific tasks
  include_tasks: "{{ distro_item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - default.yml
  loop_control:
    loop_var: distro_item
  tags:
    - unbound


- name: Install virtualenvwrapper for Python 3
  pip:
    name: virtualenvwrapper
    executable: pip3

- name: Install pyenv with git
  git:
    repo: "https://github.com/pyenv/pyenv.git"
    dest: "{{ home_dirs }}/{{ item.name }}/.pyenv"
    depth: "1"
    version: master
  diff: false
  with_items: "{{ users }}"

- name: Install pyenv-virtualenv with git
  git:
    repo: "https://github.com/pyenv/pyenv-virtualenv.git"
    dest: "{{ home_dirs }}/{{ item.name }}/.pyenv/plugins/pyenv-virtualenv"
    depth: "1"
    version: master
  diff: false
  with_items: "{{ users }}"

- name: Install pyenv-virtualenvwrapper with git
  git:
    repo: "https://github.com/pyenv/pyenv-virtualenvwrapper.git"
    dest: "{{ home_dirs }}/{{ item.name }}/.pyenv/plugins/pyenv-virtualenvwrapper"
    depth: "1"
    version: master
  diff: false
  with_items: "{{ users }}"

- name: change ownership of .pyenv
  file:
    path: "{{ home_dirs }}/{{ item.name }}/.pyenv"
    owner: "{{ item.name }}"
    group: "{{ item.group }}"
    state: directory
    recurse: yes
  with_items: "{{ users }}"

- name: Add pyenv to .zshrc
  blockinfile:
    path: "{{ home_dirs }}/{{ item.name }}/.zshrc"
    create: true
    owner: "{{ item.name }}"
    group: "{{ item.group }}"
    mode: 0640
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK for PYENV -->"
    block: |
      if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init -)"
      fi
      export PYENV_VIRTUALENVWRAPPER_PREFER_PYENV="true"
      export WORKON_HOME=$HOME/.venvs
      eval "$(pyenv virtualenv-init -)"
      pyenv virtualenvwrapper_lazy
  with_items: "{{ users }}"

- name: Add pyenv to .zprofile
  blockinfile:
    path: "{{ home_dirs }}/{{ item.name }}/.zprofile"
    create: true
    owner: "{{ item.name }}"
    group: "{{ item.group }}"
    mode: 0640
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK for PYENV -->"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init --path)"
      fi
  with_items: "{{ users }}"

- name: Add pyenv to .profile
  blockinfile:
    path: "{{ home_dirs }}/{{ item.name }}/.profile"
    create: true
    owner: "{{ item.name }}"
    group: "{{ item.group }}"
    mode: 0640
    marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK for PYENV -->"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init --path)"
      fi
      export PYENV_VIRTUALENVWRAPPER_PREFER_PYENV="true"
      export WORKON_HOME=$HOME/.virtualenvs
      eval "$(pyenv virtualenv-init -)"
      pyenv virtualenvwrapper_lazy
  with_items: "{{ users }}"

- name: Add zsh plugin for pyenv
  lineinfile:
    path: "{{ home_dirs }}/{{ item.name }}/.zshrc"
    insertafter: "^plugins=.*"
    line: "    pyenv"
  with_items: "{{ users }}"
