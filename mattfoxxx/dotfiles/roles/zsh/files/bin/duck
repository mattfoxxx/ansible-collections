#!/bin/sh

# urlencode() {
#     # urlencode <string>
# 
#     old_lc_collate=$LC_COLLATE
#     LC_COLLATE=C
# 
#     local length="${#1}"
#     for (( i = 0; i < length; i++ )); do
#         local c="${1:$i:1}"
#         case $c in
#             [a-zA-Z0-9.~_-]) printf '%s' "$c" ;;
#             *) printf '%%%02X' "'$c" ;;
#         esac
#     done
# 
#     LC_COLLATE=$old_lc_collate
# }
# 
# urldecode() {
#     # urldecode <string>
# 
#     local url_encoded="${1//+/ }"
#     printf '%b' "${url_encoded//%/\\x}"
# }

# https://stackoverflow.com/questions/296536/how-to-urlencode-data-for-curl-command
rawurlencode() {
  local string="${1}"
  local strlen=${#string}
  local encoded=""
  local pos c o

  for (( pos=0 ; pos<strlen ; pos++ )); do
     c=${string:$pos:1}
     case "$c" in
        [-_.~a-zA-Z0-9] ) o="${c}" ;;
        * )               printf -v o '%%%02x' "'$c"
     esac
     encoded+="${o}"
  done
  #echo "${encoded}"    # You can either set a return variable (FASTER)
  REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
}

rawurlencode "$*"
url="https://lite.duckduckgo.com/lite?kd=-1&kp=-1&q=$REPLY"
exec lynx "$url"

