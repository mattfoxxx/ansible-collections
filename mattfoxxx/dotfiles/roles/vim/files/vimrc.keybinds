" ########################################
" ############### GENERAL ################
" ########################################

set shell=/bin/zsh "Sets the shell  
set nocompatible "Use the vim settings, not vi

filetype plugin on "Enables the recognition files 
filetype indent on
set magic "Enable regular expressions

"Formating
set autoindent          " automatically indent lines
"set copyindent          " copy indent from previous line
set expandtab           " use spaces to indent
set shiftwidth=4        " number of spaces for indent
set smarttab            " backspace over tabs
set softtabstop=4       " tab = softtabstop * spaces
set tabstop=4           " tab stop distance
set shiftround          " be clever with tabs

"Visual
set background=dark     " we're using a dark bg
" :silent! colorscheme monokai    " colorscheme from plugin
syntax on   "  Syntax highlighting
let g:solarized_termcolors=256
:silent! colorscheme solarized    " colorscheme from plugin
set laststatus=2        " always show statusline
set ruler   "Ruler breaks
set wrap    "It allows navigation within a long line with j and k
set showcmd " Show me what I'm typing
set hlsearch " Highlight found searches
set lazyredraw
set splitbelow " Split horizontal windows below to the current windows
set splitright " Split vertical windows right to the current windows
set fileformat=unix " Prefer Unix format
set t_Co=256 " Enable 256 colors
set nolinebreak
set number  "Show line numbers
set relativenumber
set updatetime=250 
set cursorline
set showmode  " Show current mode.
set whichwrap=b,s,<,>,[,]
set title " Show title 
set showtabline=2
set fillchars+=stl:\ ,stlnc:\
set cmdheight=2 "Height command bar
hi TabLineFill ctermfg=White ctermbg=Yellow
hi TabLine ctermfg=Blue ctermbg=Yellow

"Visual Gui
" set guifont=DroidSansMonoPLNerd:h12 
" set guioptions-=m  "remove menu bar
" set guioptions-=T  "remove toolbar
" set guioptions-=r  "remove right-hand scroll bar
" set guioptions-=L  "remove left-hand scroll bar

"Encoding
" Set default encoding to UTF-8
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set bomb
set binary
set ttyfast

"File handling
set autoread " Automatically reread changed files without asking me anything
set history=50 
set noswapfile " Don't use swapfile

" Use modeline overrides
set modeline
set modelines=10

"Handling
set backspace=indent,eol,start "Makes backspace key more powerful.
"set clipboard=unnamedplus "Clipboard system
set clipboard=unnamed "Clipboard system
set pastetoggle=<F2> " Better copy & paste
set foldignore=" "
set foldlevelstart=10
set foldnestmax=10
set foldmethod=marker
set ignorecase " Search case insensitive...
set smartcase
set incsearch " Shows the match while typing
set nobackup " Don't create annoying backup files
set nowritebackup
set startofline "It allows you to change the column when moving through the line
set sm "Every time you close a parenthesis, bracket or brace, Vi shows where it was opened. If there is no  pair.

"Spell pt_BR 
"set spell spelllang=pt 

"hi SpellCap ctermfg=Gray ctermbg=Blue
"hi SpellBad ctermfg=Gray ctermbg=DarkRed 

"Completion
set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
 
"Scrolling 
"Start scrolling when we're 8 lines away from  margins
set scrolloff=8         
set sidescrolloff=15
set sidescroll=1

" ########################################
" ############### KEYBINDS ###############
" ########################################
let mapleader = " "  
let g:mapleader = " " 

"Shortcuts
"nmap <C-t> :tabnew<CR> 
"nmap <C-PageUp> :tabnext<CR>   
"nmap <C-PageDown> :tabprevious<CR> 
"nmap <C-x> :tabclose<CR> 
"nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>  
nmap <silent> <C-C> :silent noh<CR> 
"inoremap <C-s> <esc>:w<cr>                 " save files
"nnoremap <C-s> :w<cr>
"inoremap <C-d> <esc>:wq!<cr>               " save and exit
"nnoremap <C-d> :wq!<cr>
"inoremap <C-q> <esc>:qa!<cr>               " quit discarding changes
"nnoremap <C-q> :qa!<cr>

" Split windows
nmap ss :split<cr>
nmap sv :vsplit<cr>
nnoremap <leader><tab> <C-W>w<cr>

" buffers
nnoremap <leader>bd <cmd>bd<cr>


" Make Y behave like D and C
nnoremap Y y$

" Keep cursor centered on certain movements
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ'z

" Undo break points
inoremap , ,<c-g>u
inoremap . .<c-g>u
inoremap ! !<c-g>u
inoremap ? ?<c-g>u

" Jumplist mutations
nnoremap <expr> k (v:count > 5 ? "m'" . v:count : "") . 'k'
nnoremap <expr> j (v:count > 5 ? "m'" . v:count : "") . 'j'

" Moving text
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
inoremap <C-j> :m .+1<CR>==
inoremap <C-k> :m .-2<CR>==
nnoremap <leader>j :m .+1<CR>==
nnoremap <leader>k :m .-2<CR>==

" Better navigating through omnicomplete option list
" See http://stackoverflow.com/questions/2170023/how-to-map-keys-for-popup-menu-in-vim
 set completeopt=longest,menuone
 function! OmniPopup(action)
     if pumvisible()
         if a:action == 'j'
             return "\<C-N>"
         elseif a:action == 'k'
             return "\<C-P>"
         endif
     endif
     return a:action
 endfunction

 inoremap <silent><C-j> <C-R>=OmniPopup('j')<CR>
 inoremap <silent><C-k> <C-R>=OmniPopup('k')<CR>

